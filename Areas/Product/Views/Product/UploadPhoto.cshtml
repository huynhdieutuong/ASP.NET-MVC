@using AppMVC.Models.Product
@using AppMVC.Areas.Product.Models

@model UploadOneFile

@{
    ProductModel product = ViewData["product"] as ProductModel;
}

<h1>Upload photo: @product.Title</h1>

<form method="post" enctype="multipart/form-data">
    <label asp-for="FileUpload"></label>
    <input asp-for="FileUpload" />
    <span asp-validation-for="FileUpload"></span>

    <button class="btn btn-primary" asp-action="UploadPhoto" asp-route-productId="@product.Id">Upload</button>
</form>

<hr />

@if (@product.Photos.Count > 0) {
    <div id="box-photo-upload" class="d-flex flex-wrap photo-upload" data-id="@product.Id">
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            loadPhotos();
        });

        function loadPhotos () {
            const box = $("#box-photo-upload");
            box.empty();
            const productId = box.data("id");

            let formData = new FormData();
            formData.append("productId", productId);

            const urlListPhoto = "@Url.Action("ListPhotos")";

            $.ajax({
                data: formData,
                cache: false,
                url: urlListPhoto,
                type: "POST",
                contentType: false,
                processData: false,
                success: data => {
                    if (data.success) {
                        let html = '';
                        data.photos.forEach(photo => {
                            html += `<div class="photo-detail w-25 p-1">
                                        <img class="w-100" src="${photo.path}" />
                                        <span class="btn btn-danger delete-btn" data-id="${photo.id}">Delete</span>
                                    </div>`;
                        });
                        box.append(html);
                    }
                }
            })


        }

    </script>
}